<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Camera Capture System</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background-color: #000;
            color: white;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            font-family: Arial, sans-serif;
            overflow: hidden;
        }

        .main-container {
            flex: 1;
            display: flex;
            flex-direction: column;
            padding: 10px;
            gap: 10px;
            max-width: 1080px;
            margin: 0 auto;
            width: 100%;
            height: 100vh;
        }

        .preview-container {
            position: relative;
            width: 100%;
            height: calc((100vh - 20px) * 0.85); /* 85% of viewport height minus padding */
            border: 2px solid #333;
            border-radius: 8px;
            overflow: hidden;
            background-color: #111;
        }

        .preview-container::before {
            content: '';
            display: block;
            padding-top: 125%; /* 4:5 aspect ratio */
        }

        .preview-content {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

        #previewStream, #latestPhoto {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        #overlayLayer {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 10;
        }

        #captureBtn {
            position: absolute;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 20;
            background-color: rgba(255, 255, 255, 0.8);
            border: none;
            border-radius: 50%;
            width: 60px;
            height: 60px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        #captureBtn:hover {
            background-color: rgba(255, 255, 255, 1);
        }

        #captureBtn::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 48px;
            height: 48px;
            border-radius: 50%;
            border: 3px solid #000;
        }

        .photo-reel {
            height: calc((100vh - 20px) * 0.15); /* 15% of viewport height minus padding */
            display: flex;
            gap: 10px;
            overflow-x: auto;
            padding: 5px;
            background-color: #111;
            border-radius: 8px;
        }

        .photo-reel img {
            height: 100%;
            aspect-ratio: 4/5;
            object-fit: cover;
            border-radius: 4px;
            cursor: pointer;
            transition: transform 0.2s;
        }

        .photo-reel img:hover {
            transform: scale(1.05);
        }

        #noPhotosMessage {
            text-align: center;
            padding: 20px;
            color: #666;
            width: 100%;
        }

        /* Hide scrollbar but keep functionality */
        .photo-reel::-webkit-scrollbar {
            display: none;
        }
        
        .photo-reel {
            -ms-overflow-style: none;
            scrollbar-width: none;
        }

        @media (orientation: landscape) {
            .preview-container {
                width: 75vh;
                height: calc(100vh - 20px);
                margin: 0 auto;
            }
        }
    </style>
</head>
<body>
    <div class="main-container">
        <div class="preview-container">
            <div class="preview-content">
                <img id="previewStream" src="/video_feed" alt="Live Preview">
                <img id="latestPhoto" alt="Latest Capture" style="display: none;">
                <div id="overlayLayer"></div>
                <button id="captureBtn" title="Take Photo"></button>
            </div>
        </div>
        <div class="photo-reel" id="photoReel">
            {% if photos %}
                {% for photo in photos[:5] %}
                    <img src="/captures/{{ photo }}" alt="{{ photo }}" onclick="showFullSize(this.src)">
                {% endfor %}
            {% else %}
                <div id="noPhotosMessage">No photos yet</div>
            {% endif %}
        </div>
    </div>

    <script>
        const previewStream = document.getElementById('previewStream');
        const latestPhoto = document.getElementById('latestPhoto');
        const captureBtn = document.getElementById('captureBtn');
        const photoReel = document.getElementById('photoReel');
        const noPhotosMessage = document.getElementById('noPhotosMessage');
        const overlayLayer = document.getElementById('overlayLayer');
        
        function showFullSize(src) {
            window.open(src, '_blank');
        }
        
        function showLatestPhoto(filename) {
            latestPhoto.src = `/captures/${filename}`;
            previewStream.style.display = 'none';
            latestPhoto.style.display = 'block';
            
            setTimeout(() => {
                previewStream.style.display = 'block';
                latestPhoto.style.display = 'none';
            }, 5000);
        }
        
        function updateGallery(newPhotoFilename) {
            const noPhotosMsg = document.getElementById('noPhotosMessage');
            if (noPhotosMsg) {
                noPhotosMsg.remove();
            }
            
            // Add new photo to reel
            const newImg = document.createElement('img');
            newImg.src = `/captures/${newPhotoFilename}`;
            newImg.alt = newPhotoFilename;
            newImg.onclick = function() { showFullSize(this.src); };
            
            // Insert at the start and remove oldest if more than 5
            photoReel.insertBefore(newImg, photoReel.firstChild);
            if (photoReel.children.length > 5) {
                photoReel.removeChild(photoReel.lastChild);
            }
        }
        
        function addOverlayImage(imageUrl, x, y, width, height) {
            const img = document.createElement('img');
            img.src = imageUrl;
            img.style.position = 'absolute';
            img.style.left = x + 'px';
            img.style.top = y + 'px';
            img.style.width = width + 'px';
            img.style.height = height + 'px';
            overlayLayer.appendChild(img);
        }
        
        captureBtn.addEventListener('click', function() {
            fetch('/capture', { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    if(data.status === 'success') {
                        updateGallery(data.filename);
                        showLatestPhoto(data.filename);
                    } else {
                        alert('Failed to capture image.');
                    }
                });
        });
        
        // Initialize: show preview stream
        previewStream.style.display = 'block';
        latestPhoto.style.display = 'none';
    </script>
</body>
</html>